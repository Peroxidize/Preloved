# Create your views here.
import secrets
import string

from django.views.decorators.csrf import get_token
from django.contrib.auth import authenticate, login, logout
from django.contrib.auth.models import User
from django.http import JsonResponse
from django.views.decorators.csrf import ensure_csrf_cookie, csrf_exempt
from django.views.decorators.http import require_POST

from .models import ShopUser
from django.core.files.storage import default_storage as storage
from django.core.files.base import ContentFile
from datetime import datetime


class LoginController:

    def loginAPI(self, request):
        result = assert_post(request)
        if result:
            return result
        u = authenticate(username=request.POST['email'], password=request.POST['password'])
        if u is not None:
            login(request, u)
            return JsonResponse({'status': 'OK!'})
        return JsonResponse({'error': 'Invalid credentials', 'sessionID': request.session['sessionid']})

    def logoutAPI(self, request):
          if request.user.is_authenticated:
            logout(request)
            return JsonResponse({'status': 'OK!'})
          return JsonResponse({'error': 'user not authenticated'})

    def is_logged_in(self, request):
        if request.user.is_authenticated:
            return JsonResponse({'response': True})
        return JsonResponse({'response': False})

controller = LoginController()

def generate_id(length=12):
    characters = string.ascii_letters + string.digits
    random_string = ''.join(secrets.choice(characters) for _ in range(length))
    return random_string

def assert_post(request):
    if request.method != 'POST':
        return JsonResponse({'error': 'not a post-type request'})


def new_shop_user(request):
    result = assert_post(request)
    if result:
        return result
    try:
        email = request.POST['email']
        password = request.POST['password']
        first_name = request.POST['first_name']
        last_name = request.POST['last_name']
        phone_no = request.POST['phone_no']
        isFeminine = request.POST['isFeminine']
        print('Now loading feminine')
        if isFeminine == "Feminine":
            isFeminine = 1
        else:
            isFeminine = 0
        locationID = None
        print('Feminine', isFeminine)
        u = User.objects.create_user(username=email, email=email, password=password, first_name=first_name, last_name=last_name)
        ShopUser.objects.create(userID=u, phone_no=phone_no, locationID=locationID, is_feminine=isFeminine)

    except KeyError as key_error:
        return JsonResponse({'error': f'Missing required parameter: {key_error}'})

    except Exception as ex:
        msg = f'Error: {str(ex)}'
        print('Error:', msg)
        return JsonResponse({'error': msg})

    storage.save(f'users/{email}/init.txt', ContentFile(f"autogenerated::{str(datetime.now())}".encode('utf-8')))
    return JsonResponse({'status': 'OK!'})



def csrf_token(request):
    # Get the CSRF token using Django's get_token function
    csrf_token_value = get_token(request)

    # Return the CSRF token in a JSON response
    return JsonResponse({'csrf_token': csrf_token_value})


def loginAPI(request):
        return controller.loginAPI(request)


def logout_attempt(request):
    return controller.logoutAPI(request)



def is_logged_in(request):
    return controller.is_logged_in(request)